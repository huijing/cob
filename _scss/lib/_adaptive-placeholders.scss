// Adaptive placeholder defaults
// ------------------------------
// PRIVATE - default settings for adaptive placeholder

$ap-default: (
  height: 3em,
  margin: 1em,
  border: 1px,
  border-radius: 1.5em,
  font-size: 1em,
  border-color: #cccccc,
  label-color: #999999,
  active-color: #e87e22,
  valid-color: #23a045,
  placeholder-background-color: white,
  textarea: false
  );

// Default User Placeholder Settings
// ------------------------------
// - Allows $ap-default to be overwritten by default user settings

$adaptive-placeholder: (
  height: rhythm(1.5),
  margin: rhythm(0.5),
  border: 1px,
  border-radius: 0,
  active-color: #372822,
  valid-color: #4abc41,
  );

$textarea-placeholder : (
  height: rhythm(5),
  border-radius: 0,
  textarea: true, 
);

// adaptive-placeholder
// --------------------
// - Creates adaptive placeholder

@mixin adaptive-placeholder($map: $adaptive-placeholder) {
  // Only overwrite ap defaults if $map is $adaptive-placeholder
  @if $map == $adaptive-placeholder {
    $ap-default: map-merge($ap-default, $map) !global;
    $map: $ap-default;
  }
  // Updates default map with new values
  $map: map-merge($ap-default, $map);
  // Gets variables
  $height: map-get($map, height);
  $margin: map-get($map, margin);
  $border: map-get($map, border);
  $radius: map-get($map, border-radius);
  $font-size: map-get($map, font-size);
  $border-color: map-get($map, border-color);
  $label-color: map-get($map, label-color);
  $active-color: map-get($map, active-color);
  $valid-color: map-get($map, valid-color);
  $placeholder-background: map-get($map, placeholder-background-color);
  $isTextarea: map-get($map, textarea);
  $borders: $border * 2;


  // Warnings for best practices
  @if $height < 2 * $margin {
    @warn "height needs to be at least 2x margin";
  }

  @if $height < $font-size {
    @warn "height needs to be at least >= font-size";
  }

  // Input / Textarea properties
  background-color: $placeholder-background;
  height: calc(#{$height} + #{$borders});
  padding: $margin;
  font-size: $font-size;
  border: $border solid $border-color;
  border-radius: $radius;

  -webkit-transition: all 0.2s ease-out;
  transition: all 0.2s ease-out;

  -webkit-box-shadow: none;
  box-shadow: none;

  resize: none;
  outline: none;
  &:hover {
    border: $border solid $border-color;
  }
  &:focus,
  &:active {
    border: $border solid $active-color;
    & + label:before {
      color: $active-color;
    }
  }
  // Placeholder Styles
  & + label {
    display: block;
    font-size: $font-size;

    // Vertically align label with input
    @if $isTextarea {
      height: calc(#{$height} + #{$borders});
      line-height: 1;
      padding-top: calc(#{$margin}/2 + #{$border});
    }
    @else {
      height: $height;
      line-height: $height;
    }

    // Offset label correctly with negative margins
    @if $isTextarea {
      margin-top: calc(-#{$height} - #{$border});
    }
    @else {
      margin-top: calc(-#{$height} - #{$border});
    }
    margin-bottom: 1em;
    pointer-events: none; // allows clicking through label

    &:before {
      // Initial Text
      content: attr(placeholder);
      display: inline-block;
      color: $label-color;
      margin: 0 calc(#{$margin} + #{$borders});
      white-space: nowrap;
      // Transformation properties

      transition-property: transform, color;
      transition-duration: 0.2s;
      transition-delay: 0;
      transition-timing-function: ease-out;
      // Set origin to left center so it scales to the left instead of center center
      transform-origin: left center;

    }
  }

  // Focused, active and valid states for input and placeholder
  // Shifts up and adds a background white
  &:focus,
  &.active,
  &:valid {
    & + label:before {
      background: $placeholder-background;
      // set padding for left & right of tiny placeholder text
      line-height: 1;
      padding: 0 $border * 1.5;
      @if $isTextarea {
        -webkit-transform: translateY(- $margin - 0.5em ) translateY(- $border *0.5) scale(0.8, 0.8);
        transform: translateY(- $margin - 0.5em ) translateY(- $border *0.5) scale(0.8, 0.8);
      }
      @else {
        -webkit-transform: translateY(- $height *0.5) translateY(- $border *0.5) scale(0.8, 0.8);
        transform: translateY(- $height *0.5) translateY(- $border *0.5) scale(0.8, 0.8);
      }
    }
  }
  // Change placeholder value once text is entered.
  &:valid {
    border: $border solid $valid-color;
    & + label:before {
      content: attr(alt);
      color: $valid-color;
    }
  }
}
